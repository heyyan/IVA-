@page "/"
@using SearchApp.Models
@using SearchApp.Services
@inject IVideoSearch videoSearch
@using BlazorPagination

<EditForm Model="@SearchData" class="centerMiddle">
    <div class="searchBoxForm">
        <InputText @bind-Value="SearchText" class="searchBox"></InputText>
        <input class="searchBoxSubmit" style="cursor:pointer" @onclick="@(e => Search(0.ToString(), SearchText))">
    </div>
</EditForm>

@if (Loading)
{
    <div class="spinner d-flex align-items-center justify-content-center fixedSpinner">
        <div class="spinner-border text-success" role="status">
            <span class="sr-only"></span>
        </div>
    </div>
}

<div class="container">
    <div class="row">
        <div class="col">
            @if (SearchData.Root.Total != null && int.Parse(SearchData.Root.Total) > 0)
            {
                <table class="table">
                    <tbody>
                        @foreach (var result in SearchData.Root.Hits)
                        {
                            <tr>
                                <td>
                                    <h3>
                                        <a href="@result.Source.OfficialSiteUrl" target="_blank">@result.Source.Title</a>
                                    </h3>
                                    <span> <b>Program Type:</b> @result.Source.ProgramType </span>
                                    <span><b>Release Year: </b>@result.Source.Year </span>
                                    <span><b>Iva Rating:</b> @result.Source.IvaRating </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                if (First)
                {
                    <table class="table">
                        <tbody>
                            <tr>
                                <td>
                                    <span>No results found.. </span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                }

            }
        </div>

    </div>

</div>
<div class="container">
    <div class="row">
        <div class="col">
            @if (SearchData.Root.Total != null && int.Parse(SearchData.Root.Total) > 0)
            {
                <table class="col">
                    <tr class="col">
                        <td>
                            @if (SearchData.CurrentPage > 0)
                            {
                                <p class="pageButton">
                                    <button class="btn btn-link"
                                    @onclick="@(e => Search(0.ToString(), SearchData.SearchText))">
                                        |&#60;
                                    </button>
                                </p>
                            }
                            else
                            {
                                <p class="pageButtonDisabled">|&lt;</p>
                            }
                        </td>

                        <td>
                            @if (SearchData.CurrentPage > 0)
                            {
                                var prev = "prev";
                                <p class="pageButton">
                                    <button class="btn btn-link" @onclick="@(e => Search(prev, SearchData.SearchText))">&#60;</button>
                                </p>
                            }
                            else
                            {
                                <p class="pageButtonDisabled">&lt;</p>
                            }
                        </td>

                        @for (var pn = SearchData.LeftMostPage; pn < SearchData.LeftMostPage + SearchData.PageRange; pn++)
                        {
                            <td>
                                @if (SearchData.CurrentPage == pn)
                                {
                                    <p class="pageSelected">@(pn + 1)</p>
                                }
                                else
                                {
                                    <p class="pageButton">
                                        @{
                                            var p1 = SearchData.PageCount - 1;
                                            var plink = pn.ToString();
                                        }
                                        <button class="btn btn-link"
                                    @onclick="@(e => Search(plink, SearchData.SearchText))">
                                            @(pn + 1)
                                        </button>
                                    </p>
                                }
                            </td>

                        }

                        <td>
                            @if (SearchData.CurrentPage < SearchData.PageCount - 1)
                            {

                                <p class="pageButton">
                                    @{
                                        var p1 = SearchData.PageCount - 1;
                                        var next = "next";
                                    }
                                    <button class="btn btn-link"
                                    @onclick="@(e => Search(next, SearchData.SearchText))">
                                        &#62;
                                    </button>
                                </p>
                            }
                            else
                            {
                                <p class="pageButtonDisabled">&gt;</p>
                            }
                        </td>

                        <td>
                            @if (SearchData.CurrentPage < SearchData.PageCount - 1)
                            {
                                <p class="pageButton">
                                    @{
                                        var p7 = SearchData.PageCount - 1;
                                    }
                                    <button class="btn btn-link"
                                    @onclick="@(e => Search(p7.ToString(), SearchData.SearchText))">
                                        &#62;|
                                    </button>
                                </p>
                            }
                            else
                            {
                                <p class="pageButtonDisabled">&gt;|</p>
                            }
                        </td>
                    </tr>
                </table>
            }
        </div>

    </div>

</div>
@code {

    private bool Loading { get; set; } = false;
    private bool First { get; set; } = false;
    private SearchDataDto SearchData { get; set; } = new SearchDataDto();
    public string SearchText { get; set; }
    private int PageNo { get; set; }

    // @onkeydown="@Enter"
    //public async void Enter(KeyboardEventArgs e)
    //{
    //    if (e.Code == "Enter" || e.Code == "NumpadEnter")
    //    {
    //        await Search(0.ToString(), SearchText);
    //    }
    //}

    private async Task Search(string paging, string searchText)
    {
        Loading = true;
        int page;

        switch ( paging.ToString())
        {
            case "prev":
                page = PageNo - SearchData.PageSize;
                break;

            case "next":
                page = PageNo + SearchData.PageSize;
                break;

            default:
                page = int.Parse( paging.ToString());
                break;
        }

        PageNo = page;
        SearchData.Root = await videoSearch.Search(SearchText, page.ToString(), SearchData.PageSize.ToString());
        SearchData.CurrentPage = 1;
        SearchData.PageCount = int.Parse(SearchData.Root.Total);
        Loading = false;
        First = true;
    }
}